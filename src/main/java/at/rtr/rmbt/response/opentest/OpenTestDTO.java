package at.rtr.rmbt.response.opentest;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.*;
import lombok.experimental.SuperBuilder;

import java.sql.Timestamp;

@SuperBuilder
@Getter
@AllArgsConstructor
@NoArgsConstructor
@EqualsAndHashCode
public class OpenTestDTO {

    @JsonIgnore
    private Long cursor;

    @JsonProperty("open_uuid")
    private String openUuid;

    @JsonProperty("open_test_uuid")
    private String openTestUuid;

    @JsonProperty("time")
    private String time;

    @JsonProperty("full_time")
    private String fullTime;

    @JsonProperty("client_time")
    private Timestamp clientTime;

    @JsonProperty("lat")
    private Double latitude;

    @JsonProperty("long")
    private Double longitude;

    @JsonProperty("loc_accuracy")
    private Double locAccuracy;

    @JsonProperty("download_kbit")
    private Integer downloadKbit;

    @JsonProperty("upload_kbit")
    private Integer uploadKbit;

    @JsonProperty("ping_ms")
    private Double pingMs;

    @JsonProperty("signal_strength")
    private Integer signalStrength;

    @JsonProperty("lte_rsrp")
    private Integer lteRsrp;

    @JsonProperty("platform")
    private String platform;

    @JsonProperty("model")
    private String model;

    @JsonProperty("provider_name")
    private String providerName;

    @Setter
    @JsonProperty("download_classification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer downloadClassification;

    @Setter
    @JsonProperty("upload_classification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer uploadClassification;

    @Setter
    @JsonProperty("ping_classification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer pingClassification;

    @Setter
    @JsonProperty("signal_classification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer signalClassification;
}
