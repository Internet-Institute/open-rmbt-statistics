package at.rtr.rmbt.response;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import lombok.AllArgsConstructor;
import lombok.Getter;

import java.sql.Timestamp;

@JsonPropertyOrder({
        "open_uuid", "open_test_uuid", "time_utc", "cat_technology", "network_type", "lat", "long",
        "loc_src", "loc_accuracy", "gkz", "zip_code", "country_location", "download_kbit", "upload_kbit", "ping_ms",
        "lte_rsrp", "lte_rsrq", "server_name", "test_duration", "num_threads", "platform", "model", "client_version",
        "network_mcc_mnc", "network_name", "sim_mcc_mnc", "nat_type", "asn", "ip_anonym", "ndt_download_kbit",
        "ndt_upload_kbit", "implausible", "signal_strength", "pinned", "kg_nr", "gkz_sa", "land_cover", "cell_area_code",
        "cell_location_id", "channel_number", "radio_band",
        "settlement_type", "link_id", "link_name", "link_name1", "link_name2", "link_distance", "edge_id", "link_frc", "dtm_level",
        "signal_classification", "temperature", "atraster100", "atraster250"
})
@Getter
@AllArgsConstructor
public class OpenTestExportDto {

    @JsonProperty("loc_src")
    private final String locSrc;

    @JsonProperty(value = "gkz")
    private final Integer gkz;

    @JsonProperty("zip_code")
    private final String zipCode;

    @JsonProperty("country_location")
    private final String countryLocation;

    @JsonProperty("server_name")
    private final String serverName;

    @JsonProperty("test_duration")
    private final Integer testDuration;

    @JsonProperty("num_threads")
    private final Integer numThreads;

    @JsonProperty("client_version")
    private final String clientVersion;

    @JsonProperty("network_mcc_mnc")
    private final String networkMccMnc;

    @JsonProperty("network_name")
    private final String networkName;

    @JsonProperty("sim_mcc_mnc")
    private final String simMccMnc;

    @JsonProperty("nat_type")
    private final String natType;

    @JsonProperty(value = "asn")
    private final Long asn;

    @JsonProperty("ip_anonym")
    private final String ipAnonym;

    @JsonProperty("ndt_download_kbit")
    private final Integer ndtDownloadKbit;

    @JsonProperty("ndt_upload_kbit")
    private final Integer ndtUploadKbit;

    @JsonProperty(value = "implausible")
    private final Boolean implausible;

    @JsonProperty("pinned")
    private final Boolean pinned;

    @JsonProperty("kg_nr")
    private final Integer kgNr;

    @JsonProperty("gkz_sa")
    private final Integer gkzSa;

    @JsonProperty("land_cover")
    private final Integer landCover;

    @JsonProperty("cell_area_code")
    private final Integer cellAreaCode;

    @JsonProperty("cell_location_id")
    private final Integer cellLocationId;

    @JsonProperty("channel_number")
    private final Integer channelNumber;

    @JsonProperty("radio_band")
    private final Integer radioBand;

    @JsonProperty("lte_rsrq")
    private final Integer lteRsrq;

    @JsonProperty("cat_technology")
    private final String catTechnology;

    @JsonProperty("network_type")
    private final String networkType;

    @JsonProperty("settlement_type")
    private final Integer settlementType;

    @JsonProperty("link_id")
    private final Integer linkId;

    @JsonProperty("link_name")
    private final String linkName;

    @JsonProperty("link_distance")
    private final Integer linkDistance;

    @JsonProperty("edge_id")
    private final String edgeId;

    @JsonProperty("link_frc")
    private final Integer linkFrc;

    @JsonProperty("dtm_level")
    private final Integer dtmLevel;

    @JsonIgnore
    private final Long cursor;

    @JsonProperty("open_uuid")
    private final String openUuid;

    @JsonProperty("open_test_uuid")
    private final String openTestUuid;

    @JsonProperty("time_utc")
    private final String time;

    @JsonProperty("lat")
    private final Double latitude;

    @JsonProperty("long")
    private final Double longitude;

    @JsonProperty("loc_accuracy")
    private final Double locAccuracy;

    @JsonProperty("download_kbit")
    private final Integer downloadKbit;

    @JsonProperty("upload_kbit")
    private final Integer uploadKbit;

    @JsonProperty("ping_ms")
    private final Double pingMs;

    @JsonProperty("signal_strength")
    private final Integer signalStrength;

    @JsonProperty("lte_rsrp")
    private final Integer lteRsrp;

    @JsonProperty("platform")
    private final String platform;

    @JsonProperty("model")
    private final String model;

    @JsonProperty("signal_classification")
    private final Integer signalClassification;

    @JsonProperty("temperature")
    private final Double temperature;

    @JsonProperty("atraster100")
    private final String atraster100;

    @JsonProperty("atraster250")
    private final String atraster250;
}
