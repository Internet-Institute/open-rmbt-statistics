package at.rtr.rmbt.controller;

import at.rtr.rmbt.constant.URIConstants;
import at.rtr.rmbt.response.OpenTestDetailsDtoResponse;
import at.rtr.rmbt.service.OpenTestService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@Slf4j
@RequiredArgsConstructor
public class OpenTestController {

    private final OpenTestService openTestService;

    @GetMapping(value = {URIConstants.OPEN_TEST_SEARCH, URIConstants.OPEN_TEST})
    public ResponseEntity<Object> searchForOpenDataTests(
            @RequestParam MultiValueMap<String, String> parameters

    ) {
        return openTestService.searchOpenDataTests(parameters);
    }

    @PostMapping(path = {URIConstants.OPEN_TEST_SEARCH, URIConstants.OPEN_TEST}, consumes = {MediaType.APPLICATION_FORM_URLENCODED_VALUE})
    public ResponseEntity<Object> searchForOpenDataTestsPost(@RequestParam MultiValueMap parameters) {
        return openTestService.searchOpenDataTests(parameters);
    }

    @GetMapping(URIConstants.EXPORT_PNG)
    public ResponseEntity<Object> getPng(@PathVariable String lang, @PathVariable(name = "open_test_uuid") String openTestUuid, @PathVariable String size) {
        return openTestService.retrievePng(lang, openTestUuid, size);
    }

    @GetMapping(value = URIConstants.OPEN_TEST_BY_UUID)
    public OpenTestDetailsDtoResponse getOpenTestByUuid(
            @PathVariable(value = "open_test_uuid") String openTestUuid,
            @RequestParam(value = "verbose", required = false) String verbose
    ) {
        return openTestService.getOpenTestByUuid(openTestUuid, verbose);
    }
}
